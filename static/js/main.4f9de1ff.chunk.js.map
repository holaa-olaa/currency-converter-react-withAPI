{"version":3,"sources":["Form/Label/styles.js","Form/Label/index.js","Form/Result/styles.js","Form/Result/index.js","Form/Footer/index.js","Form/Clock/styles.js","Form/Clock/index.js","Form/Clock/useLocalDate.js","Form/Buttons/styles.js","Form/Buttons/index.js","Form/styles.js","Form/index.js","Form/UseRatesData.js","App.js","reportWebVitals.js","background.jpeg","GlobalStyles.js","index.js","theme.js"],"names":["Legend","styled","span","Label","labelText","body","StyledResult","p","theme","colors","lightBlue","white","Result","result","undefined","targetAmount","toFixed","currency","Footer","footer","StyledClock","div","Clock","date","useState","Date","localDate","setLocalDate","formattedDate","toLocaleString","weekday","day","month","year","hour","minute","second","useEffect","intervalId","setInterval","clearInterval","useLocalDate","Wrapper","Button","button","darkBlue","Buttons","type","FormWrapper","form","botticelli","FormLegend","legend","FormFieldset","fieldset","Loading","Failure","crimson","StyledInput","input","grey","Form","setResult","ratesData","state","setRatesData","fetchRates","a","fetch","response","ok","Error","statusText","json","rates","status","setTimeout","useRatesData","amount","setAmount","setCurrency","onSubmit","event","preventDefault","rate","sourceAmount","calculateResult","onReset","value","step","min","placeholder","required","autoFocus","onChange","target","as","Object","keys","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","normalize","background","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f9de1ff.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Legend = styled.span`\n    display: inline-block;\n    width: 100%;\n    max-width: 250px;\n    margin: 5px;\n`;","import { Legend } from './styles.js';\n\nconst Label = ({ labelText, body }) => (\n    <label>\n        <Legend>\n            {labelText}\n        </Legend>\n        {body}\n    </label>\n);\n\nexport default Label;","import styled from 'styled-components';\n\nexport const StyledResult = styled.p`\n    text-align: center;\n    text-decoration: solid;\n    letter-spacing: 1.7px;\n    padding: 10px;\n    margin: 5px;\n    background-color: ${({ theme }) => theme.colors.lightBlue};\n    color: ${({ theme }) => theme.colors.white};\n    max-width: 100%;\n    border-radius: 15px;\n`;","import { StyledResult } from './styles.js';\n\nconst Result = ({ result }) => (\n    <StyledResult>\n        WYNIK:&nbsp;\n        {result !== undefined && (\n            <strong>\n                {result.targetAmount.toFixed(2)}&nbsp;{result.currency}\n            </strong>\n        )}\n    </StyledResult>\n);\n\nexport default Result;","import styled from 'styled-components';\n\nconst Footer = styled.footer`\n    font-size: 14px;\n    margin-top: 15px;\n`;\n\nexport default Footer;","import styled from 'styled-components';\n\nexport const StyledClock = styled.div`\n    text-align: right;\n    font-family: monospace;\n    font-size: 14px;\n`;","import { useLocalDate } from './useLocalDate';\nimport { StyledClock } from './styles.js';\n\nconst Clock = () => {\n    const date = useLocalDate();\n\n    return (\n        <StyledClock>Dzisiaj jest {date}</StyledClock>\n    );\n};\n\nexport default Clock;","import { useState, useEffect } from 'react';\n\nexport const useLocalDate = () => {\n    const [localDate, setLocalDate] = useState(new Date());\n    const formattedDate = localDate.toLocaleString(undefined, {\n        weekday: \"long\",\n        day: \"numeric\",\n        month: \"long\",\n        year: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n        second: \"numeric\"\n    });\n\n    useEffect(() => {\n        const intervalId = setInterval(() => {\n            setLocalDate(new Date());\n        }, 1000);\n\n        return () => {\n            clearInterval(intervalId);\n        };\n    }, []);\n\n    return formattedDate;\n};","import styled from 'styled-components';\n\nexport const Wrapper = styled.span`\n    display: block;\n    margin: 40px 5px;\n`;\n\nexport const Button = styled.button`\n    display: block;\n    width: 100%;\n    padding: 10px;\n    margin: 10px 0;\n    border-radius: 10px;\n    border: none;\n    background-color: ${({ theme }) => theme.colors.darkBlue};\n    color: ${({ theme }) => theme.colors.white};\n    letter-spacing: 1.6px;\n\n    &:hover {\n        filter: brightness(110%);\n    }\n\n    &:active {\n        filter: brightness(120%);\n    }\n`;","import { Wrapper, Button } from './styles.js';\n\nconst Buttons = () => (\n    <Wrapper>\n        <Button>\n            Przelicz kwotę!\n        </Button>\n        <Button type=\"reset\">\n            Wyczyść\n        </Button>\n    </Wrapper>\n);\n\nexport default Buttons;","import styled from 'styled-components';\n\nexport const FormWrapper = styled.form`\n    margin: auto 10px;\n    padding: 30px 30px;\n    background-color: ${({ theme }) => theme.colors.botticelli};\n    border-radius: 10px;\n\n    @media(max-width:767px) {\n        overflow-x: auto;\n    }\n`;\n\nexport const FormLegend = styled.legend`\n    font-size: 34px;\n    padding: 2px;\n    text-transform: uppercase;\n`;\n\nexport const FormFieldset = styled.fieldset`\n    border-radius: 5px;\n    padding: 10px;\n`;\n\nexport const Loading = styled.p`\n    color: ${({theme}) => theme.colors.darkBlue};\n`;\n\nexport const Failure = styled.p`\n    color: ${({theme}) => theme.colors.crimson};\n`;\n\nexport const StyledInput = styled.input`\n    width: 100%;\n    max-width: 300px;\n    padding: 10px;\n    border: solid 2px ${({ theme }) => theme.colors.grey};\n    border-radius: 5px;\n`;","import Label from './Label';\nimport Result from './Result';\nimport Footer from './Footer';\nimport Clock from './Clock';\nimport Buttons from './Buttons';\nimport { useState } from 'react';\nimport { FormFieldset, FormLegend, FormWrapper, Loading, Failure, StyledInput } from './styles.js';\nimport { useRatesData } from './UseRatesData.js';\n\n\nconst Form = () => {\n    const [result, setResult] = useState();\n    const ratesData = useRatesData();\n\n    const calculateResult = (currency, amount) => {\n        const rate = ratesData.rates[currency];\n\n        setResult({\n            sourceAmount: +amount,\n            targetAmount: amount * rate,\n            currency,\n        });\n    };\n\n    const [amount, setAmount] = useState(\"\");\n    const [currency, setCurrency] = useState(\"AED\");\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n        calculateResult(currency, amount);\n    };\n\n    const onFormReset = () => {\n        setAmount(\"\");\n        setResult();\n    };\n\n\n    return (\n        <FormWrapper onSubmit={onFormSubmit} onReset={onFormReset}>\n            <Clock />\n            <FormFieldset>\n                <FormLegend>Kantor walut</FormLegend>\n                {ratesData.state === \"loading\"\n                    ? (\n                        <Loading>\n                            Chwilka cierpliwości &#128521; <br />Ładuję kursy walut z Europejskiego Banku Centralnego.\n                        </Loading>\n                    )\n                    : (\n                        ratesData.state === \"error\" ? (\n\n                            <Failure>\n                                Ups... Coś poszło nie tak. Sprawdź czy masz połączenie z internetem lub poczekaj chwilkę.\n                            </Failure>\n                        ) : (\n                            <>\n                                <p>\n                                    <Label\n                                        labelText=\"Kwota w złotych (PLN)*:\"\n                                        body={\n                                            <StyledInput\n                                                value={amount}\n                                                type=\"number\"\n                                                step=\"0.01\"\n                                                min=\"0.01\"\n                                                placeholder=\"Wpisz kwotę\"\n                                                required\n                                                autoFocus\n                                                onChange={({ target }) => setAmount(target.value)}\n                                            />}\n                                    >\n                                    </Label>\n                                </p>\n                                <p>\n                                    <Label\n                                        labelText=\"Wybierz walutę*:\"\n                                        body=\n                                        {<StyledInput\n                                            as=\"select\"\n                                            required\n                                            onChange={({ target }) => setCurrency(target.value)}\n                                            value={currency}\n                                        >\n                                            {Object.keys(ratesData.rates).map(((currency) => (\n                                                <option key={currency} value={currency}>\n                                                    {currency}\n                                                </option>\n                                            )))}\n                                        </StyledInput>}\n                                    >\n                                    </Label>\n                                </p>\n                                <Buttons />\n                                <Result result={result} />\n                                <Footer>\n                                    Kurs z dnia {ratesData.date} - według danych z Narodowego Banku Polskiego\n                                </Footer>\n                            </>\n                        )\n                    )}\n            </FormFieldset>\n        </FormWrapper>\n    );\n};\n\nexport default Form;","import { useEffect, useState } from \"react\";\n\nexport const useRatesData = () => {\n    const [ratesData, setRatesData] = useState({\n        state: \"loading\",\n    });\n\n    useEffect(() => {\n        const fetchRates = async () => {\n            try {\n                const response = await fetch(\"https://api.exchangerate.host/latest?base=PLN\");\n\n                if (!response.ok) {\n                    throw new Error(response.statusText);\n                }\n\n                const { rates, date } = await response.json();\n\n                setRatesData({\n                    status: \"success\",\n                    rates,\n                    date,\n                });\n\n            } catch {\n                setRatesData({\n                    state: \"error\",\n                });\n            }\n        };\n        setTimeout(fetchRates, 3000);\n    }, []);\n\n    return ratesData;\n};","import Form from './Form';\n\nfunction App() {\n  return (\n    <Form />\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/background.54ab7e07.jpeg\";","import { createGlobalStyle } from 'styled-components';\nimport { normalize } from 'styled-normalize';\nimport background from './background.jpeg';\n\n\nexport const GlobalStyle = createGlobalStyle`\n\n  ${normalize}\n  \n  html {\n    box-sizing: border-box;\n  }\n  *, ::after, ::before {\n    box-sizing: inherit;\n  }\n  body {\n    width: 100%;\n    max-width: 800px;\n    margin: 80px auto;\n    padding: 10px;\n    font-family: 'Barlow Condensed', sans-serif;\n    font-size: 22px;\n    background-image: url(\"${background}\");\n    background-size: cover;\n  }\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from './theme.js';\nimport { GlobalStyle } from './GlobalStyles';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\n    colors: {\n        grey: \"hsl(0, 0%, 50%)\",\n        darkBlue: \"hsl(214, 55%, 33%)\",\n        lightBlue: \"hsl(214, 34%, 55%)\",\n        botticelli: \"hsl(194, 33%, 87%)\",\n        white: \"hsl(0, 0%, 100%)\",\n        crimson: \"#dc143c\",\n    }\n};"],"sourceRoot":""}